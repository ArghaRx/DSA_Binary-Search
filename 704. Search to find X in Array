*****Binary Search apporach******

public class Solution {
    public static int search(int []nums, int target) {
        // Write your code here.
        int n=nums.length;
        int low=0,high=n-1;
        while(low <= high)
        {
            int mid=(low+high)/2;
            if (nums[mid] == target) return mid;
            else if (target > nums[mid]) low = mid+1;
            else high = mid - 1;
        }
        return -1;
    }
}


******* Recursive ****
class Solution {
    public static int binarysearch(int nums[],int low,int high,int target)
    {
        if ( low > high )
         return -1;

         int mid = ( low + high ) / 2;
        if ( nums[mid] == target ) return mid;
        else if (target > nums[mid]) return binarysearch ( nums,mid+1,high,target);
        else return binarysearch(nums,low,mid-1,target);
    }
    public int search(int[] nums, int target) {
        return binarysearch(nums,0,nums.length-1,target);
        
    }
}

TC - - O(Log n) [2 base]
